Android Leaks: Automatically Detecting Potential Privacy LeaksIn Aandroid Applicationson a Large Scale
=======================================================================================================


Malware Analysis Technique:
===========================

Static Analysis






Dataset description:
======================

24350 apps from different android markets






Feature selection Technique:
============================







Feature Extraction Technique:
============================





Classification Technique:
=========================

---------------------






Accuracy or confusion matrix scores:
====================================

-----------

Scalability and Efficiency:
===========================



Overview:
=========

In their work researchers has proposed a static code analysis based framework for detecting sensitive information leakage in android application. They stated that providing permissions to an application does not inform users about how it will be used by the applications. To check this they have proposed AndroidLeaks (a static analysis framework). They have highlighted the issue of incompleteness of Android documentation about API calls and required permissions. To address this problem they attempted to automatically build this mapping by analyzing the Android source code. In addition to the automatic source code analysis they reviewed the android source code manually to supplement the android permission mapping. Later a subset of the source and sinks are used to perform dataflow analysis for identification of privacy leaks. It was observed that the ad libraries are main source of privacy leaks in android applications. Cases related to typographical errors by developers were also found. It was also observed that ad libraries check for permissions of running applications. Although, Native code is outside the scope of their analysis but it was observed that many applications use native code. Their study still lacks a complete permission mapping, android specific control and data flow analysis. Some code portions were not analyzed due to invalid bytecode conversion. 